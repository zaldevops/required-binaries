.nh
.TH "HELM" "1" "Feb 2021" "Auto generated by spf13/cobra" ""

.SH NAME
.PP
helm\-dependency \- manage a chart's dependencies


.SH SYNOPSIS
.PP
\fBhelm dependency update|build|list [flags]\fP


.SH DESCRIPTION
.PP
Manage the dependencies of a chart.

.PP
Helm charts store their dependencies in 'charts/'. For chart developers, it is
often easier to manage dependencies in 'Chart.yaml' which declares all
dependencies.

.PP
The dependency commands operate on that file, making it easy to synchronize
between the desired dependencies and the actual dependencies stored in the
'charts/' directory.

.PP
For example, this Chart.yaml declares two dependencies:

.PP
.RS

.nf
# Chart.yaml
dependencies:
\- name: nginx
  version: "1.2.3"
  repository: "https://example.com/charts"
\- name: memcached
  version: "3.2.1"
  repository: "https://another.example.com/charts"

.fi
.RE

.PP
The 'name' should be the name of a chart, where that name must match the name
in that chart's 'Chart.yaml' file.

.PP
The 'version' field should contain a semantic version or version range.

.PP
The 'repository' URL should point to a Chart Repository. Helm expects that by
appending '/index.yaml' to the URL, it should be able to retrieve the chart
repository's index. Note: 'repository' can be an alias. The alias must start
with 'alias:' or '@'.

.PP
Starting from 2.2.0, repository can be defined as the path to the directory of
the dependency charts stored locally. The path should start with a prefix of
"file://". For example,

.PP
.RS

.nf
# Chart.yaml
dependencies:
\- name: nginx
  version: "1.2.3"
  repository: "file://../dependency\_chart/nginx"

.fi
.RE

.PP
If the dependency chart is retrieved locally, it is not required to have the
repository added to helm by "helm add repo". Version matching is also supported
for this case.


.SH OPTIONS
.PP
\fB\-h\fP, \fB\-\-help\fP[=false]
	help for dependency


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-debug\fP[=false]
	enable verbose output

.PP
\fB\-\-kube\-apiserver\fP=""
	the address and the port for the Kubernetes API server

.PP
\fB\-\-kube\-as\-group\fP=[]
	group to impersonate for the operation, this flag can be repeated to specify multiple groups.

.PP
\fB\-\-kube\-as\-user\fP=""
	username to impersonate for the operation

.PP
\fB\-\-kube\-ca\-file\fP=""
	the certificate authority file for the Kubernetes API server connection

.PP
\fB\-\-kube\-context\fP=""
	name of the kubeconfig context to use

.PP
\fB\-\-kube\-token\fP=""
	bearer token used for authentication

.PP
\fB\-\-kubeconfig\fP=""
	path to the kubeconfig file

.PP
\fB\-n\fP, \fB\-\-namespace\fP=""
	namespace scope for this request

.PP
\fB\-\-registry\-config\fP="/private/tmp/helm\-20210204\-99981\-1f8vc0y/.brew\_home/Library/Preferences/helm/registry.json"
	path to the registry config file

.PP
\fB\-\-repository\-cache\fP="/private/tmp/helm\-20210204\-99981\-1f8vc0y/.brew\_home/Library/Caches/helm/repository"
	path to the file containing cached repository indexes

.PP
\fB\-\-repository\-config\fP="/private/tmp/helm\-20210204\-99981\-1f8vc0y/.brew\_home/Library/Preferences/helm/repositories.yaml"
	path to the file containing repository names and URLs


.SH SEE ALSO
.PP
\fBhelm(1)\fP, \fBhelm\-dependency\-build(1)\fP, \fBhelm\-dependency\-list(1)\fP, \fBhelm\-dependency\-update(1)\fP


.SH HISTORY
.PP
4\-Feb\-2021 Auto generated by spf13/cobra
