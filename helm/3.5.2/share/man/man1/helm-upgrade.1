.nh
.TH "HELM" "1" "Feb 2021" "Auto generated by spf13/cobra" ""

.SH NAME
.PP
helm\-upgrade \- upgrade a release


.SH SYNOPSIS
.PP
\fBhelm upgrade [RELEASE] [CHART] [flags]\fP


.SH DESCRIPTION
.PP
This command upgrades a release to a new version of a chart.

.PP
The upgrade arguments must be a release and chart. The chart
argument can be either: a chart reference('example/mariadb'), a path to a chart directory,
a packaged chart, or a fully qualified URL. For chart references, the latest
version will be specified unless the '\-\-version' flag is set.

.PP
To override values in a chart, use either the '\-\-values' flag and pass in a file
or use the '\-\-set' flag and pass configuration from the command line, to force string
values, use '\-\-set\-string'. In case a value is large and therefore
you want not to use neither '\-\-values' nor '\-\-set', use '\-\-set\-file' to read the
single large value from file.

.PP
You can specify the '\-\-values'/'\-f' flag multiple times. The priority will be given to the
last (right\-most) file specified. For example, if both myvalues.yaml and override.yaml
contained a key called 'Test', the value set in override.yaml would take precedence:

.PP
.RS

.nf
$ helm upgrade \-f myvalues.yaml \-f override.yaml redis ./redis

.fi
.RE

.PP
You can specify the '\-\-set' flag multiple times. The priority will be given to the
last (right\-most) set specified. For example, if both 'bar' and 'newbar' values are
set for a key called 'foo', the 'newbar' value would take precedence:

.PP
.RS

.nf
$ helm upgrade \-\-set foo=bar \-\-set foo=newbar redis ./redis

.fi
.RE


.SH OPTIONS
.PP
\fB\-\-atomic\fP[=false]
	if set, upgrade process rolls back changes made in case of failed upgrade. The \-\-wait flag will be set automatically if \-\-atomic is used

.PP
\fB\-\-ca\-file\fP=""
	verify certificates of HTTPS\-enabled servers using this CA bundle

.PP
\fB\-\-cert\-file\fP=""
	identify HTTPS client using this SSL certificate file

.PP
\fB\-\-cleanup\-on\-fail\fP[=false]
	allow deletion of new resources created in this upgrade when upgrade fails

.PP
\fB\-\-create\-namespace\fP[=false]
	if \-\-install is set, create the release namespace if not present

.PP
\fB\-\-description\fP=""
	add a custom description

.PP
\fB\-\-devel\fP[=false]
	use development versions, too. Equivalent to version '>0.0.0\-0'. If \-\-version is set, this is ignored

.PP
\fB\-\-disable\-openapi\-validation\fP[=false]
	if set, the upgrade process will not validate rendered templates against the Kubernetes OpenAPI Schema

.PP
\fB\-\-dry\-run\fP[=false]
	simulate an upgrade

.PP
\fB\-\-force\fP[=false]
	force resource updates through a replacement strategy

.PP
\fB\-h\fP, \fB\-\-help\fP[=false]
	help for upgrade

.PP
\fB\-\-history\-max\fP=10
	limit the maximum number of revisions saved per release. Use 0 for no limit

.PP
\fB\-\-insecure\-skip\-tls\-verify\fP[=false]
	skip tls certificate checks for the chart download

.PP
\fB\-i\fP, \fB\-\-install\fP[=false]
	if a release by this name doesn't already exist, run an install

.PP
\fB\-\-key\-file\fP=""
	identify HTTPS client using this SSL key file

.PP
\fB\-\-keyring\fP="/private/tmp/helm\-20210204\-99981\-1f8vc0y/.brew\_home/.gnupg/pubring.gpg"
	location of public keys used for verification

.PP
\fB\-\-no\-hooks\fP[=false]
	disable pre/post upgrade hooks

.PP
\fB\-o\fP, \fB\-\-output\fP=table
	prints the output in the specified format. Allowed values: table, json, yaml

.PP
\fB\-\-password\fP=""
	chart repository password where to locate the requested chart

.PP
\fB\-\-post\-renderer\fP=exec
	the path to an executable to be used for post rendering. If it exists in $PATH, the binary will be used, otherwise it will try to look for the executable at the given path

.PP
\fB\-\-render\-subchart\-notes\fP[=false]
	if set, render subchart notes along with the parent

.PP
\fB\-\-repo\fP=""
	chart repository url where to locate the requested chart

.PP
\fB\-\-reset\-values\fP[=false]
	when upgrading, reset the values to the ones built into the chart

.PP
\fB\-\-reuse\-values\fP[=false]
	when upgrading, reuse the last release's values and merge in any overrides from the command line via \-\-set and \-f. If '\-\-reset\-values' is specified, this is ignored

.PP
\fB\-\-set\fP=[]
	set values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)

.PP
\fB\-\-set\-file\fP=[]
	set values from respective files specified via the command line (can specify multiple or separate values with commas: key1=path1,key2=path2)

.PP
\fB\-\-set\-string\fP=[]
	set STRING values on the command line (can specify multiple or separate values with commas: key1=val1,key2=val2)

.PP
\fB\-\-skip\-crds\fP[=false]
	if set, no CRDs will be installed when an upgrade is performed with install flag enabled. By default, CRDs are installed if not already present, when an upgrade is performed with install flag enabled

.PP
\fB\-\-timeout\fP=5m0s
	time to wait for any individual Kubernetes operation (like Jobs for hooks)

.PP
\fB\-\-username\fP=""
	chart repository username where to locate the requested chart

.PP
\fB\-f\fP, \fB\-\-values\fP=[]
	specify values in a YAML file or a URL (can specify multiple)

.PP
\fB\-\-verify\fP[=false]
	verify the package before using it

.PP
\fB\-\-version\fP=""
	specify the exact chart version to use. If this is not specified, the latest version is used

.PP
\fB\-\-wait\fP[=false]
	if set, will wait until all Pods, PVCs, Services, and minimum number of Pods of a Deployment, StatefulSet, or ReplicaSet are in a ready state before marking the release as successful. It will wait for as long as \-\-timeout

.PP
\fB\-\-wait\-for\-jobs\fP[=false]
	if set and \-\-wait enabled, will wait until all Jobs have been completed before marking the release as successful. It will wait for as long as \-\-timeout


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-debug\fP[=false]
	enable verbose output

.PP
\fB\-\-kube\-apiserver\fP=""
	the address and the port for the Kubernetes API server

.PP
\fB\-\-kube\-as\-group\fP=[]
	group to impersonate for the operation, this flag can be repeated to specify multiple groups.

.PP
\fB\-\-kube\-as\-user\fP=""
	username to impersonate for the operation

.PP
\fB\-\-kube\-ca\-file\fP=""
	the certificate authority file for the Kubernetes API server connection

.PP
\fB\-\-kube\-context\fP=""
	name of the kubeconfig context to use

.PP
\fB\-\-kube\-token\fP=""
	bearer token used for authentication

.PP
\fB\-\-kubeconfig\fP=""
	path to the kubeconfig file

.PP
\fB\-n\fP, \fB\-\-namespace\fP=""
	namespace scope for this request

.PP
\fB\-\-registry\-config\fP="/private/tmp/helm\-20210204\-99981\-1f8vc0y/.brew\_home/Library/Preferences/helm/registry.json"
	path to the registry config file

.PP
\fB\-\-repository\-cache\fP="/private/tmp/helm\-20210204\-99981\-1f8vc0y/.brew\_home/Library/Caches/helm/repository"
	path to the file containing cached repository indexes

.PP
\fB\-\-repository\-config\fP="/private/tmp/helm\-20210204\-99981\-1f8vc0y/.brew\_home/Library/Preferences/helm/repositories.yaml"
	path to the file containing repository names and URLs


.SH SEE ALSO
.PP
\fBhelm(1)\fP


.SH HISTORY
.PP
4\-Feb\-2021 Auto generated by spf13/cobra
