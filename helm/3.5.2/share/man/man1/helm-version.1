.nh
.TH "HELM" "1" "Feb 2021" "Auto generated by spf13/cobra" ""

.SH NAME
.PP
helm\-version \- print the client version information


.SH SYNOPSIS
.PP
\fBhelm version [flags]\fP


.SH DESCRIPTION
.PP
Show the version for Helm.

.PP
This will print a representation the version of Helm.
The output will look something like this:

.PP
version.BuildInfo{Version:"v3.2.1", GitCommit:"fe51cd1e31e6a202cba7dead9552a6d418ded79a", GitTreeState:"clean", GoVersion:"go1.13.10"}

.RS
.IP \(bu 2
Version is the semantic version of the release.
.IP \(bu 2
GitCommit is the SHA for the commit that this version was built from.
.IP \(bu 2
GitTreeState is "clean" if there are no local code changes when this binary was
built, and "dirty" if the binary was built from locally modified code.
.IP \(bu 2
GoVersion is the version of Go that was used to compile Helm.

.RE

.PP
When using the \-\-template flag the following properties are available to use in
the template:

.RS
.IP \(bu 2
\&.Version contains the semantic version of Helm
.IP \(bu 2
\&.GitCommit is the git commit
.IP \(bu 2
\&.GitTreeState is the state of the git tree when Helm was built
.IP \(bu 2
\&.GoVersion contains the version of Go that Helm was compiled with

.RE


.SH OPTIONS
.PP
\fB\-h\fP, \fB\-\-help\fP[=false]
	help for version

.PP
\fB\-\-short\fP[=false]
	print the version number

.PP
\fB\-\-template\fP=""
	template for version string format


.SH OPTIONS INHERITED FROM PARENT COMMANDS
.PP
\fB\-\-debug\fP[=false]
	enable verbose output

.PP
\fB\-\-kube\-apiserver\fP=""
	the address and the port for the Kubernetes API server

.PP
\fB\-\-kube\-as\-group\fP=[]
	group to impersonate for the operation, this flag can be repeated to specify multiple groups.

.PP
\fB\-\-kube\-as\-user\fP=""
	username to impersonate for the operation

.PP
\fB\-\-kube\-ca\-file\fP=""
	the certificate authority file for the Kubernetes API server connection

.PP
\fB\-\-kube\-context\fP=""
	name of the kubeconfig context to use

.PP
\fB\-\-kube\-token\fP=""
	bearer token used for authentication

.PP
\fB\-\-kubeconfig\fP=""
	path to the kubeconfig file

.PP
\fB\-n\fP, \fB\-\-namespace\fP=""
	namespace scope for this request

.PP
\fB\-\-registry\-config\fP="/private/tmp/helm\-20210204\-99981\-1f8vc0y/.brew\_home/Library/Preferences/helm/registry.json"
	path to the registry config file

.PP
\fB\-\-repository\-cache\fP="/private/tmp/helm\-20210204\-99981\-1f8vc0y/.brew\_home/Library/Caches/helm/repository"
	path to the file containing cached repository indexes

.PP
\fB\-\-repository\-config\fP="/private/tmp/helm\-20210204\-99981\-1f8vc0y/.brew\_home/Library/Preferences/helm/repositories.yaml"
	path to the file containing repository names and URLs


.SH SEE ALSO
.PP
\fBhelm(1)\fP


.SH HISTORY
.PP
4\-Feb\-2021 Auto generated by spf13/cobra
